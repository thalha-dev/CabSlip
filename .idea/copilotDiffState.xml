<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/dev/thalha/cabslip/MainActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/dev/thalha/cabslip/MainActivity.kt" />
              <option name="originalContent" value="package dev.thalha.cabslip&#10;&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import androidx.activity.enableEdgeToEdge&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.material3.MaterialTheme&#10;import androidx.compose.material3.Surface&#10;import androidx.compose.ui.Modifier&#10;import dev.thalha.cabslip.ui.navigation.CabSlipNavigation&#10;import dev.thalha.cabslip.ui.theme.CabSlipTheme&#10;&#10;class MainActivity : ComponentActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        setContent {&#10;            CabSlipTheme {&#10;                Surface(&#10;                    modifier = Modifier.fillMaxSize(),&#10;                    color = MaterialTheme.colorScheme.background&#10;                ) {&#10;                    CabSlipNavigation()&#10;                }&#10;            }&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package dev.thalha.cabslip&#10;&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import androidx.activity.enableEdgeToEdge&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.material3.MaterialTheme&#10;import androidx.compose.material3.Surface&#10;import androidx.compose.runtime.*&#10;import androidx.compose.ui.Modifier&#10;import dev.thalha.cabslip.ui.navigation.CabSlipNavigation&#10;import dev.thalha.cabslip.ui.screens.SplashScreen&#10;import dev.thalha.cabslip.ui.theme.CabSlipTheme&#10;&#10;class MainActivity : ComponentActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        setContent {&#10;            CabSlipTheme {&#10;                Surface(&#10;                    modifier = Modifier.fillMaxSize(),&#10;                    color = MaterialTheme.colorScheme.background&#10;                ) {&#10;                    var showSplash by remember { mutableStateOf(true) }&#10;&#10;                    if (showSplash) {&#10;                        SplashScreen(&#10;                            onSplashFinished = { showSplash = false }&#10;                        )&#10;                    } else {&#10;                        CabSlipNavigation()&#10;                    }&#10;                }&#10;            }&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/dev/thalha/cabslip/ui/screens/SplashScreen.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/dev/thalha/cabslip/ui/screens/SplashScreen.kt" />
              <option name="originalContent" value="&#10;&#10;&#10;&#10;" />
              <option name="updatedContent" value="package dev.thalha.cabslip.ui.screens&#10;&#10;import androidx.compose.animation.core.*&#10;import androidx.compose.foundation.Image&#10;import androidx.compose.foundation.background&#10;import androidx.compose.foundation.layout.*&#10;import androidx.compose.material3.*&#10;import androidx.compose.runtime.*&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.draw.alpha&#10;import androidx.compose.ui.draw.scale&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.res.painterResource&#10;import androidx.compose.ui.text.font.FontWeight&#10;import androidx.compose.ui.text.style.TextAlign&#10;import androidx.compose.ui.unit.dp&#10;import androidx.compose.ui.unit.sp&#10;import dev.thalha.cabslip.R&#10;import dev.thalha.cabslip.ui.theme.*&#10;import kotlinx.coroutines.delay&#10;&#10;@Composable&#10;fun SplashScreen(&#10;    onSplashFinished: () -&gt; Unit&#10;) {&#10;    var startAnimation by remember { mutableStateOf(false) }&#10;&#10;    // Single, smooth logo animation&#10;    val logoScale by animateFloatAsState(&#10;        targetValue = if (startAnimation) 1f else 0.3f,&#10;        animationSpec = spring(&#10;            dampingRatio = Spring.DampingRatioMediumBouncy,&#10;            stiffness = Spring.StiffnessLow&#10;        ),&#10;        label = &quot;logoScale&quot;&#10;    )&#10;&#10;    val logoAlpha by animateFloatAsState(&#10;        targetValue = if (startAnimation) 1f else 0f,&#10;        animationSpec = tween(&#10;            durationMillis = 1500,&#10;            easing = FastOutSlowInEasing&#10;        ),&#10;        label = &quot;logoAlpha&quot;&#10;    )&#10;&#10;    // Clean solid background matching your brand&#10;    val backgroundColor = Gray800 // Pleasant dark gray that complements our theme&#10;&#10;    LaunchedEffect(Unit) {&#10;        startAnimation = true&#10;        delay(2500) // Clean 2.5 second splash&#10;        onSplashFinished()&#10;    }&#10;&#10;    Box(&#10;        modifier = Modifier&#10;            .fillMaxSize()&#10;            .background(backgroundColor), // Changed from gradient to solid color&#10;        contentAlignment = Alignment.Center&#10;    ) {&#10;        Column(&#10;            horizontalAlignment = Alignment.CenterHorizontally,&#10;            verticalArrangement = Arrangement.Center&#10;        ) {&#10;            // Your logo (will look perfect once you create it with the color palette)&#10;            Image(&#10;                painter = painterResource(id = R.drawable.cabslip_logo),&#10;                contentDescription = &quot;CabSlip Logo&quot;,&#10;                modifier = Modifier&#10;                    .size(140.dp)&#10;                    .scale(logoScale)&#10;                    .alpha(logoAlpha)&#10;            )&#10;&#10;            Spacer(modifier = Modifier.height(32.dp))&#10;&#10;            // Clean app name&#10;            Text(&#10;                text = &quot;CabSlip&quot;,&#10;                style = MaterialTheme.typography.headlineLarge.copy(&#10;                    fontSize = 32.sp,&#10;                    fontWeight = FontWeight.Bold,&#10;                    letterSpacing = 1.5.sp&#10;                ),&#10;                color = Gold400,&#10;                textAlign = TextAlign.Center,&#10;                modifier = Modifier.alpha(logoAlpha)&#10;            )&#10;&#10;            Spacer(modifier = Modifier.height(8.dp))&#10;&#10;            // Simple tagline&#10;            Text(&#10;                text = &quot;Professional Receipt Management&quot;,&#10;                style = MaterialTheme.typography.bodyLarge,&#10;                color = NavyBlue200,&#10;                textAlign = TextAlign.Center,&#10;                modifier = Modifier.alpha(logoAlpha)&#10;            )&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_cabslip_logo.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_cabslip_logo.xml" />
              <option name="originalContent" value="&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;120dp&quot;&#10;    android:height=&quot;120dp&quot;&#10;    android:viewportWidth=&quot;120&quot;&#10;    android:viewportHeight=&quot;120&quot;&gt;&#10;    &#10;    &lt;!-- Background Circle --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#3B4654&quot;&#10;        android:pathData=&quot;M60,60m-55,0a55,55 0,1 1,110 0a55,55 0,1 1,-110 0&quot; /&gt;&#10;    &#10;    &lt;!-- Inner Circle --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#D4AF37&quot;&#10;        android:pathData=&quot;M60,60m-45,0a45,45 0,1 1,90 0a45,45 0,1 1,-90 0&quot; /&gt;&#10;    &#10;    &lt;!-- Car/Taxi Icon --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#3B4654&quot;&#10;        android:pathData=&quot;M35,55 L85,55 L82,45 L38,45 Z&quot; /&gt;&#10;    &#10;    &lt;path&#10;        android:fillColor=&quot;#3B4654&quot;&#10;        android:pathData=&quot;M30,55 L30,65 L90,65 L90,55 L85,55 L35,55 Z&quot; /&gt;&#10;    &#10;    &lt;!-- Wheels as paths instead of circles --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#3B4654&quot;&#10;        android:pathData=&quot;M40,70m-6,0a6,6 0,1 1,12 0a6,6 0,1 1,-12 0&quot; /&gt;&#10;    &#10;    &lt;path&#10;        android:fillColor=&quot;#3B4654&quot;&#10;        android:pathData=&quot;M80,70m-6,0a6,6 0,1 1,12 0a6,6 0,1 1,-12 0&quot; /&gt;&#10;    &#10;    &lt;!-- Receipt/Document Icon --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#FFFFFF&quot;&#10;        android:pathData=&quot;M50,35 L70,35 L70,50 L50,50 Z&quot; /&gt;&#10;    &#10;    &lt;!-- Document lines --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#3B4654&quot;&#10;        android:pathData=&quot;M52,38 L68,38 M52,41 L68,41 M52,44 L65,44 M52,47 L62,47&quot;&#10;        android:strokeWidth=&quot;1&quot;&#10;        android:strokeColor=&quot;#3B4654&quot; /&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_launcher_background_custom.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_launcher_background_custom.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;108dp&quot;&#10;    android:height=&quot;108dp&quot;&#10;    android:viewportWidth=&quot;108&quot;&#10;    android:viewportHeight=&quot;108&quot;&gt;&#10;    &#10;    &lt;!-- Professional gradient background --&gt;&#10;    &lt;path android:pathData=&quot;M0,0h108v108h-108z&quot;&gt;&#10;        &lt;aapt:attr name=&quot;android:fillColor&quot; xmlns:aapt=&quot;http://schemas.android.com/aapt&quot;&gt;&#10;            &lt;gradient &#10;                android:startY=&quot;0&quot;&#10;                android:endY=&quot;108&quot;&#10;                android:startColor=&quot;#0B1426&quot;&#10;                android:centerColor=&quot;#1A2332&quot;&#10;                android:endColor=&quot;#2A3441&quot;&#10;                android:type=&quot;linear&quot; /&gt;&#10;        &lt;/aapt:attr&gt;&#10;    &lt;/path&gt;&#10;    &#10;    &lt;!-- Subtle pattern overlay --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#3B4654&quot;&#10;        android:fillAlpha=&quot;0.1&quot;&#10;        android:pathData=&quot;M0,0 L108,108 M108,0 L0,108&quot; /&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_launcher_foreground_custom.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_launcher_foreground_custom.xml" />
              <option name="originalContent" value="&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;108dp&quot;&#10;    android:height=&quot;108dp&quot;&#10;    android:viewportWidth=&quot;108&quot;&#10;    android:viewportHeight=&quot;108&quot;&gt;&#10;    &#10;    &lt;!-- Background --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#0B1426&quot;&#10;        android:pathData=&quot;M0,0h108v108h-108z&quot; /&gt;&#10;    &#10;    &lt;!-- Main Circle --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#3B4654&quot;&#10;        android:pathData=&quot;M54,54m-40,0a40,40 0,1 1,80 0a40,40 0,1 1,-80 0&quot; /&gt;&#10;    &#10;    &lt;!-- Inner Circle --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#D4AF37&quot;&#10;        android:pathData=&quot;M54,54m-32,0a32,32 0,1 1,64 0a32,32 0,1 1,-64 0&quot; /&gt;&#10;    &#10;    &lt;!-- Taxi Icon --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#0B1426&quot;&#10;        android:pathData=&quot;M38,50 L70,50 L68,42 L40,42 Z&quot; /&gt;&#10;    &#10;    &lt;path&#10;        android:fillColor=&quot;#0B1426&quot;&#10;        android:pathData=&quot;M35,50 L35,58 L73,58 L73,50 Z&quot; /&gt;&#10;    &#10;    &lt;!-- Wheels as paths instead of circles --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#0B1426&quot;&#10;        android:pathData=&quot;M42,62m-4,0a4,4 0,1 1,8 0a4,4 0,1 1,-8 0&quot; /&gt;&#10;    &#10;    &lt;path&#10;        android:fillColor=&quot;#0B1426&quot;&#10;        android:pathData=&quot;M66,62m-4,0a4,4 0,1 1,8 0a4,4 0,1 1,-8 0&quot; /&gt;&#10;    &#10;    &lt;!-- Receipt Icon --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#FFFFFF&quot;&#10;        android:pathData=&quot;M46,32 L62,32 L62,44 L46,44 Z&quot; /&gt;&#10;    &#10;    &lt;!-- Document lines --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#0B1426&quot;&#10;        android:pathData=&quot;M48,35 L60,35 M48,37 L60,37 M48,39 L58,39 M48,41 L56,41&quot;&#10;        android:strokeWidth=&quot;0.8&quot;&#10;        android:strokeColor=&quot;#0B1426&quot; /&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>